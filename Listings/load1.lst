C51 COMPILER V9.56.0.0   LOAD1                                                             07/10/2017 16:54:04 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE LOAD1
OBJECT MODULE PLACED IN .\Objects\load1.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE load1.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\loa
                    -d1.lst) TABS(2) OBJECT(.\Objects\load1.obj)

line level    source

   1          #include<reg51.h>
   2          #include<stdio.h>
   3          #include<math.h>
   4          
   5          sbit AD_DATA_PIN = P1^5; // Pin mapping of microcontroller
   6          sbit AD_SCK_PIN = P0^0; // Pin mapping of microcontroller
   7          unsigned long num;
   8          unsigned int j;
   9          sbit RS=P2^0;
  10          sbit E=P2^1;
  11          
  12          void reverse(char *str, int len)
  13          {
  14   1          int i=0, j=len-1, temp;
  15   1          while (i<j)
  16   1          {
  17   2              temp = str[i];
  18   2              str[i] = str[j];
  19   2              str[j] = temp;
  20   2              i++; j--;
  21   2          }
  22   1      }
  23          
  24          int intToStr(int x, char str[], int d)
  25          {
  26   1          int i = 0;
  27   1          while (x)
  28   1          {
  29   2              str[i++] = (x%10) + '0';
  30   2              x = x/10;
  31   2          }
  32   1              while (i < d)
  33   1              str[i++] = '0';
  34   1       
  35   1          reverse(str, i);
  36   1          str[i] = '\0';
  37   1          return i;
  38   1      }
  39          
  40          void ftoa(float n, char *res, int afterpoint)
  41          {
  42   1          // Extract integer part
  43   1          int ipart = (int)n;
  44   1       
  45   1          // Extract floating part
  46   1          float fpart = n - (float)ipart;
  47   1       
  48   1          // convert integer part to string
  49   1          int i = intToStr(ipart, res, 0);
  50   1       
  51   1          // check for display option after point
  52   1          if (afterpoint != 0)
  53   1          {
  54   2              res[i] = '.';  // add dot
C51 COMPILER V9.56.0.0   LOAD1                                                             07/10/2017 16:54:04 PAGE 2   

  55   2       
  56   2              // Get the value of fraction part upto given no.
  57   2              // of points after dot. The third parameter is needed
  58   2              // to handle cases like 233.007
  59   2              fpart = fpart * pow(10, afterpoint);
  60   2       
  61   2              intToStr((int)fpart, res + i + 1, afterpoint);
  62   2          }
  63   1      }
  64          
  65          unsigned long ReadCount(void)
  66          {
  67   1        unsigned long Count;
  68   1        unsigned char i;
  69   1        AD_SCK_PIN=0; 
  70   1        Count=0;
  71   1        while(AD_DATA_PIN); 
  72   1        for (i=0;i<24;i++)
  73   1        {
  74   2          AD_SCK_PIN=1;
  75   2          Count=Count<<1;
  76   2          AD_SCK_PIN=0;
  77   2          if(AD_DATA_PIN) Count++;
  78   2        }
  79   1        AD_SCK_PIN=1;
  80   1        Count=Count^0x800000;
  81   1        AD_SCK_PIN=0;
  82   1        return(Count);
  83   1      }
  84          
  85          void main()
  86          {
  87   1        num=ReadCount();
  88   1           
  89   1          char res[20];
*** ERROR C141 IN LINE 89 OF load1.c: syntax error near 'char'
*** ERROR C202 IN LINE 89 OF load1.c: 'res': undefined identifier
  90   1          float n = num;
*** ERROR C141 IN LINE 90 OF load1.c: syntax error near 'float'
*** ERROR C202 IN LINE 90 OF load1.c: 'n': undefined identifier
  91   1          ftoa(n, res, 4);
*** ERROR C202 IN LINE 91 OF load1.c: 'n': undefined identifier
  92   1          printf("\n\"%s\"\n", res);
*** ERROR C202 IN LINE 92 OF load1.c: 'res': undefined identifier
  93   1          return 0;
  94   1        
  95   1      }

C51 COMPILATION COMPLETE.  0 WARNING(S),  6 ERROR(S)
